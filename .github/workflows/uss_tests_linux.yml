name: uss-tests-linux

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for beta and master branches
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      # Workaround for creating the package.json file 
      - name: Setup npm package
        run: npm init -y && npm install
     # Installs Cypress
      - name: Cypress install
        uses: cypress-io/github-action@v4
        with:
          # Disable running of tests within install job
          runTests: false
      # Install and start the localhost server in the background
      - name: Run server
        run: npx http-server -c-1 &


  chrome-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Runs the installation steps first
    needs: install
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Cypress run
        uses: cypress-io/github-action@v4.1.0
        with:
          wait-on: "http://localhost:8080"
          build: npm i -D cypress
          browser: chrome
          
  firefox-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Define Github strategy how to spin up new machines
    strategy:
     matrix:
      job: [0, 1, 2, 3]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      # Workaround for creating the package.json file 
      - name: Setup npm package
        run: npm init -y && npm install
      # Install and start the localhost server in the background
      - name: Run server
        run: npx http-server -c-1 &
      # Runs a single command using the runners shell
      - name: Cypress run
        uses: cypress-io/github-action@v4.1.0
        with:
          wait-on: "http://localhost:8080"
          build: npm i -D cypress
          browser: firefox
          record: true
          parallel: true

  edge-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Define Github strategy how to spin up new machines
    strategy:
     matrix:
      job: [0, 1, 2, 3]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      # Workaround for creating the package.json file 
      - name: Setup npm package
        run: npm init -y && npm install
      # Installs Edge
      - name: Install Microsoft Edge
        run: | 
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo rm microsoft.gpg
          sudo apt update && sudo apt install microsoft-edge-stable
      # Install and start the localhost server in the background
      - name: Run server
        run: npx http-server -c-1 &
      # Runs a single command using the runners shell
      - name: Cypress run
        uses: cypress-io/github-action@v4.1.0
        with:
          wait-on: "http://localhost:8080"
          build: npm i -D cypress
          browser: edge
          record: true
          parallel: true
