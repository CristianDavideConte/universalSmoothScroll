export async function isValidStepLengthCalculator(b,a={container:uss._pageScroller,totalScrollAmount:100,timeout:5e3,debugString:"isValidStepLengthCalculator"}){if(null===a||"object"!=typeof a||Array.isArray(a))return uss._errorLogger("isValidStepLengthCalculator","the options parameter to be an object",a),!1;if(a.debugString=a.debugString||"isValidStepLengthCalculator","function"!=typeof b)return uss._errorLogger(a.debugString,"the stepLengthCalculator to be a function",b),!1;if(a.container!==window&&!(a.container instanceof Element))return uss._errorLogger(a.debugString,"the options.container parameter to be an Element or the Window",a.container),!1;if(!Number.isFinite(a.totalScrollAmount)||a.totalScrollAmount<0)return uss._errorLogger(a.debugString,"the options.totalScrollAmount parameter to be a positive number",a.totalScrollAmount),!1;if(!Number.isFinite(a.timeout)||a.timeout<0)return uss._errorLogger(a.debugString,"the options.timeout parameter to be a positive number",a.timeout),!1;let g=performance.now(),c=a.totalScrollAmount,d=a.timeout,h=c,e=!1,i,j=(k,l)=>{i=performance.now();let f=b(h,g,i,c,c-h,c,a.container);if(!Number.isFinite(f)){l(f);return}if(h-=f,e=i-g>d,h<=0||e){k();return}window.requestAnimationFrame(()=>j(k,l))};try{await new Promise((a,b)=>{window.requestAnimationFrame(()=>j(a,b))})}catch(f){try{uss._errorLogger(a.debugString,"the stepLengthCalculator to return a valid stepLength value",f)}catch(k){}return!1}return e&&uss._warningLogger(b.name||"the passed function","didn't complete the test scroll-animation within "+d+"ms",!1),!0}